console.log('number' + 3 + 3); 
// "number" + 3 = "number3", затем "number3" + 3 = "number33"
// Результат: "number33" потому что стринг первый аргумент. При сложении строки и числа происходит конкатинация 
console.log(null + 3); 
// null становится 0 и делее это как 0 + 3 = 3
// Результат: 3

console.log(5 && "qwerty"); 
// && возвращает последнее истинное значение если оба операнда истинны
// Результат: "qwerty"

console.log(+'40' + +'2' + "hillel"); 
// унарный плюс приводит к числу и 40 + 2 = 42. дальше происходит склейка 42 + "hillel" = "42hillel"
// Результат: 42hillel

console.log('10' - 5 === 6); 
// '10' это строка так же у нас есть минус и он преобразовывает строку в число. получаес на этом шаге 10 - 5 = 5;
// дальше 5 === 6  где строгое сравнение, значения не равны поэтому фолс 
// Результат: false

console.log(true + false); 
// true = 1, false = 0 получаем 1 + 0 = 1
// Результат: 1

console.log('4px' - 3); 
// у нас строка и число. строка ное а намбер. NaN - 3 тут операция с нан дает NaN
// Результат: NaN

console.log('4' - 3); 
//'4' это строка но у нас минус (был бы плюс то было бы 43) и преобразовываемся в число получается 4-3=1 
// Результат: 1

console.log('6' + 3 ** 0); 
// возводим в степень - тк у нас ноль то число не умножается а делится на себя итог = 1. любое число в степени 0 = 1
// '6' стринговое и у нас есть плюс а значит склеиваем '6' + 1 = "61"
// Результат: "61"

console.log(12 / '6'); 
// 12 число, строку приводим в число потому что только цифры там. 12\6=2
// Результат: 2

console.log('10' + (5 === 6)); 
//1. рассматриваем скобки внутри скобок. строгое равентсво поэтому результат фолс;
//2.дальше всё просто, "10" это стринговое значение фолс булевое, при сложении со строкой преобразовывается в строку '10' + false = "10false"
// Результат: "10false"

console.log(null == '');  
//сравнение налл с undefined это тру. во всех остальных случаях сравнения с налл всегда фолс
// Результат: false

console.log(3 ** (9 / 3)); 
// деление в скобках = 3. дальше возводим 3 в 3 степень. итог 27
// Результат: 27

console.log(!!'false' == !!'true'); 
// запуталась прям обязательно) оба непустые строки и приводятся к true итог при одинаковых типах просто проверяем равентсво true == true это тру
// Результат: true

console.log(0 || '0' && 1); 
// оператор анд имеет высокий приоритет '0' - не пустая строка значит трушно; 1 - трушное. значит возвращает второе труное итог - 1 
// получилось 0 || 1. фолс и тру. оператор или возвращвет тру потомучто есть хоть один трушный. итог - 1.
// Результат: 1

console.log((+null == false) < 1);
//1. нал это ничего и есть плюс поетому преобразовывает в 0; 
//2. изза оператора равенства (не строгого) фолс так же стремится к числу и равен 0
//3. получаем 0==0 что есть тру, дальше тру это 1 
//4. итог 1<1 и это фолс
// Результат: false

console.log(false && true || true); 
// false && true - операнды не есть оба истинные значит возвращает первое фолс.если бы оба были трушные то вернуло бы последнее значение тру. итог тут фолс
// получили false || true и оператор или возвращает тру потомучто есть хотя бы один тру
// Результат: true

console.log(false && (false || true)); 
// приоритет скобок - возвращает тру если хоть один операнд тру. итог тру
// получаем фолс анд тру - не оба истинные значит возвращает фолс
// Результат: false

console.log((+null == false) < 1 ** 5); 
//1. null означает ничего и знак плюс преобразовывает в число итог 0;
//2. изза того что у нас не строгое сравнение фолс тоже преобразуется в число и равен 0. 0==0 это тру;
//3. дальше смотрим возведение в степень - 1 в 5 степени это 1;
//4. получаем тру меньше единицы 1 и тру преобразовывается в 1 итог 1<1 это фолс ;
// Результат: False
